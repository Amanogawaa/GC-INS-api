"""revise models

Revision ID: a965cd4a1337
Revises: b05f1fd6bbbf
Create Date: 2025-02-13 19:15:50.442119

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a965cd4a1337'
down_revision: Union[str, None] = 'b05f1fd6bbbf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_service_categories_id'), 'service_categories', ['id'], unique=False)
    op.create_table('category_requirement_association',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('requirement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['service_categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirements.id'], ondelete='CASCADE')
    )
    op.create_table('service_category_association',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['service_categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ondelete='CASCADE')
    )
    op.drop_index('ix_requirement_categories_id', table_name='requirement_categories')
    op.drop_table('requirement_categories')
    op.drop_table('service_requirement_association')
    op.alter_column('requirements', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('requirements_category_id_fkey', 'requirements', type_='foreignkey')
    op.create_foreign_key(None, 'requirements', 'service_categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.add_column('services', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'services', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_column('services', 'user_id')
    op.drop_constraint(None, 'requirements', type_='foreignkey')
    op.create_foreign_key('requirements_category_id_fkey', 'requirements', 'requirement_categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.alter_column('requirements', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('service_requirement_association',
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('requirement_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirements.id'], name='service_requirement_association_requirement_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name='service_requirement_association_service_id_fkey', ondelete='CASCADE')
    )
    op.create_table('requirement_categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='requirement_categories_pkey'),
    sa.UniqueConstraint('name', name='requirement_categories_name_key')
    )
    op.create_index('ix_requirement_categories_id', 'requirement_categories', ['id'], unique=False)
    op.drop_table('service_category_association')
    op.drop_table('category_requirement_association')
    op.drop_index(op.f('ix_service_categories_id'), table_name='service_categories')
    op.drop_table('service_categories')
    # ### end Alembic commands ###
