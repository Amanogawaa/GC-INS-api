"""Changes

Revision ID: 7ccc04b76e03
Revises: 539cd25aa934
Create Date: 2025-02-13 12:22:05.787707

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7ccc04b76e03'
down_revision: Union[str, None] = '539cd25aa934'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('requirement_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_requirement_categories_id'), 'requirement_categories', ['id'], unique=False)
    op.drop_index('ix_category_id', table_name='category')
    op.drop_table('category')
    op.drop_constraint('requirements_category_id_fkey', 'requirements', type_='foreignkey')
    op.create_foreign_key(None, 'requirements', 'requirement_categories', ['category_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'requirements', type_='foreignkey')
    op.create_foreign_key('requirements_category_id_fkey', 'requirements', 'category', ['category_id'], ['id'], ondelete='CASCADE')
    op.create_table('category',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='category_pkey'),
    sa.UniqueConstraint('name', name='category_name_key')
    )
    op.create_index('ix_category_id', 'category', ['id'], unique=False)
    op.drop_index(op.f('ix_requirement_categories_id'), table_name='requirement_categories')
    op.drop_table('requirement_categories')
    # ### end Alembic commands ###
